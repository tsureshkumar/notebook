# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
export ZSH_DISABLE_COMPFIX=true
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/Users/tsureshkumar/.zshrc'


fpath=(
  /usr/local/share/zsh-completions
  /usr/local/share/zsh/site-functions
  /usr/local/share/zsh/site-functions
  $fpath
)
fpath=(/usr/local/share/zsh-completions $fpath)

autoload -Uz compinit
compinit -u
# End of lines added by compinstall

# zsh plugins
plugins=(git)
# zsh nvm plugin to manage node instances
plugins+=(zsh-nvm)

export ZSH_THEME=bureau

export PATH=/opt/twitter_mde/bin:/usr/local/bin:/usr/local/opt/python/libexec/bin:$PATH #home brew path


# generate random password
randpw(){ LC_CTYPE=C < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;}

# themes, plugins from oh-my-zshrc
# refer https://github.com/robbyrussell/oh-my-zsh
# to install: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
source $HOME/my/notebook/dots/dot-oh-my-zshrc
#source $HOME/my/notebook-private/dots/dot-DO.sh
#source $HOME/my/notebook-office/dots/zshrc
#source $HOME/projectsrc

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/usr/local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

conda deactivate || :
export PATH="/usr/local/opt/ruby/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"
export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"
export TERM=xterm-256color
#export TERM=tmux-256color

#useful colors to be used in scripts
#https://stackoverflow.com/questions/16843382/colored-shell-script-output-library
export RCol='\e[0m'    # Text Reset

# Regular           Bold                Underline           High Intensity      BoldHigh Intens     Background          High Intensity Backgrounds
export Bla='\e[0;30m'; export BBla='\e[1;30m'; export UBla='\e[4;30m'; export IBla='\e[0;90m'; export BIBla='\e[1;90m'; export On_Bla='\e[40m'; export On_IBla='\e[0;100m';
export Red='\e[0;31m'; export BRed='\e[1;31m'; export URed='\e[4;31m'; export IRed='\e[0;91m'; export BIRed='\e[1;91m'; export On_Red='\e[41m'; export On_IRed='\e[0;101m';
export Gre='\e[0;32m'; export BGre='\e[1;32m'; export UGre='\e[4;32m'; export IGre='\e[0;92m'; export BIGre='\e[1;92m'; export On_Gre='\e[42m'; export On_IGre='\e[0;102m';
export Yel='\e[0;33m'; export BYel='\e[1;33m'; export UYel='\e[4;33m'; export IYel='\e[0;93m'; export BIYel='\e[1;93m'; export On_Yel='\e[43m'; export On_IYel='\e[0;103m';
export Blu='\e[0;34m'; export BBlu='\e[1;34m'; export UBlu='\e[4;34m'; export IBlu='\e[0;94m'; export BIBlu='\e[1;94m'; export On_Blu='\e[44m'; export On_IBlu='\e[0;104m';
export Pur='\e[0;35m'; export BPur='\e[1;35m'; export UPur='\e[4;35m'; export IPur='\e[0;95m'; export BIPur='\e[1;95m'; export On_Pur='\e[45m'; export On_IPur='\e[0;105m';
export Cya='\e[0;36m'; export BCya='\e[1;36m'; export UCya='\e[4;36m'; export ICya='\e[0;96m'; export BICya='\e[1;96m'; export On_Cya='\e[46m'; export On_ICya='\e[0;106m';
export Whi='\e[0;37m'; export BWhi='\e[1;37m'; export UWhi='\e[4;37m'; export IWhi='\e[0;97m'; export BIWhi='\e[1;97m'; export On_Whi='\e[47m'; export On_IWhi='\e[0;107m';

case `uname` in
    Linux)
        alias unescape="sed 's/\x1b\[[0-9]\{1,2\}m//g'" 
        ;;
    Darwin)
        alias unescape='sed -E "s/"$'\E'"\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g"'
        ;;
esac


# Journaling aliases
alias journal='vim journal_$(date -v-1d "+%Y-%m-%d").md'

#sledge:binary path
export SLEDGE_BIN=/Users/s0t00ov/.sledge/bin
export PATH="${PATH}:${SLEDGE_BIN}"

# ctags + bazel
function cta () {
  DIR=$1
  while [ ! -f $DIR/BUILD ]
    do DIR=`dirname $DIR`
  done
  echo "importing from ${DIR}"
  ./bazel query "kind('source file', deps("//${DIR}", ${2:-1}))" \
    | sed -e '/^@/d' -e 's/:/\//' -e 's/^\/\///' \
    | sort \
    >> /tmp/filedeps \
    && ctags -L /tmp/filedeps -f tags
  lines=`wc -l < tags | awk '{$1=$1};1'`
  echo "indexed ${lines} tags"
}

# prepare tags and ripgrep for interesting folder
function cta_tags_ripgrip () {
  DIR=$1
  if [ ! -d $DIR ]; then
    DIR=`dirname $DIR`
  fi
  echo "importing from ${DIR}"
  find $DIR -iname '*.scala' >> /tmp/filedeps
  find $DIR -iname '*.java' >> /tmp/filedeps
  find $DIR -iname '*.py' >> /tmp/filedeps
  ctags -L /tmp/filedeps -f tags
  lines=`wc -l < tags | awk '{$1=$1};1'`
  echo "indexed ${lines} tags"
}

export EDITOR=vim

###-begin-web-script-content-###
###-begin-run-completions-###
#
# yargs command completion script
#
# Installation: /Users/sthangavel/workspace/web/scripts/run null >> ~/.zshrc
#    or /Users/sthangavel/workspace/web/scripts/run null >> ~/.zsh_profile on OSX.
#
_run_yargs_completions()
{
  local reply
  local si=$IFS
  IFS=$'
' reply=($(COMP_CWORD="$((CURRENT-1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" /Users/sthangavel/workspace/web/scripts/run --get-yargs-completions "${words[@]}"))
  IFS=$si
  _describe 'values' reply
}
compdef _run_yargs_completions run
###-end-run-completions-###
###-end-web-script-content-###

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/twitter_mde/bin/terraform terraform

 export PATH="$PATH":"$HOME/.pub-cache/bin"
 export PATH="$PATH":"$HOME/Library/Application Support/Coursier/bin"


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/tsureshkumar/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/tsureshkumar/bin/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/tsureshkumar/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/tsureshkumar/bin/google-cloud-sdk/completion.zsh.inc'; fi
